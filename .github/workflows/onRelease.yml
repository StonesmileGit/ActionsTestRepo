name: "On Release"

# Controls when the action will run. 
on:
  release:
    types: [published]
    
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  check-secret:
    uses: KSP-RO/BuildTools/.github/workflows/check-secret.yml@master
    secrets:
      KSP_ZIP_PASSWORD: ${{ secrets.KSP_ZIP_PASSWORD }}

  attach-release-artifacts:
    needs: [check-secret]
    if: needs.check-secret.outputs.has-password == 'true'
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Get Branch
        shell: bash
        run: |
          releaseBranch=${{ github.event.release.target_commitish }}
          echo "Found branch ${releaseBranch}"
          echo "tagged_branch=${releaseBranch}" >> $GITHUB_ENV

      - name: Checkout found branch
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ env.tagged_branch }}

      - name: Get version
        env:
          TAG_STRING: ${{ github.event.release.tag_name }}
        run: |
          VFULL="$(echo $TAG_STRING | sed -e s/v//)"
          VMAJOR="$(echo $VFULL | cut -f 1 -d '.')"
          VMINOR="$(echo $VFULL | cut -f 2 -d '.')"
          VPATCH="$(echo $VFULL | cut -f 3 -d '.')"
          VBUILD="$(echo $VFULL | cut -f 4 -d '.')"

          echo "Version string: $TAG_STRING"
          echo "Version is $VMAJOR dot $VMINOR dot $VPATCH dot $VBUILD"

      - name: Update changelog file
        uses: KSP-RO/BuildTools/process-changelog@master
        with:
          tag: ${{ github.event.release.tag_name }}
          body: "${{ github.event.release.body }}"
          path: ${GITHUB_WORKSPACE}/GameData/RP-0/changelog.cfg

      - name: Update version file
        uses: KSP-RO/BuildTools/update-version-file@master
        with:
          tag: ${{ github.event.release.tag_name }}
          path: ${GITHUB_WORKSPACE}/GameData/RP-0/RP-1.version

      - name: Setup git config
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"

      - name: Commit changes
        shell: bash
        env:
          TAG_STRING: ${{ github.event.release.tag_name }}
        run: |
          RELEASEBRANCH=${{ env.tagged_branch }}
          git add "${GITHUB_WORKSPACE}/GameData/RP-0/changelog.cfg"
          git add "${GITHUB_WORKSPACE}/GameData/RP-0/RP-1.version"
          git commit -m "Update version to $TAG_STRING"
          git push origin $RELEASEBRANCH
          git tag $TAG_STRING $RELEASEBRANCH --force
          git push origin $TAG_STRING --force
